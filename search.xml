<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo博客搭建总结</title>
      <link href="/2020/01/23/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/"/>
      <url>/2020/01/23/hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h2 id="起始"><a href="#起始" class="headerlink" title="起始"></a>起始</h2><p>起始很早就有做一个自己的博客的想法，但那时以为只有写一个java web项目，搭配服务器才能搞出来，这就无法实施了。但这个寒假开始偶然看到一个<a href="https://szyink.com/" target="_blank" rel="noopener">typecho博客</a>，一下子就被它的主题吸引了，第一印象是真的好看，清新文艺、简洁大方，瞬间有了搭建自己博客的冲动。 然后就开始了解个人博客的搭建，由于typecho、wordpress都得有自己的服务器才能让别人访问，于是出于第一次的尝试心态，选择了hexo+GitHub pages搭建，尝鲜的同时还是能让别人访问的。再申请个域名，不用备案也能让博客显得有格调。。</p><h2 id="主题的选择"><a href="#主题的选择" class="headerlink" title="主题的选择"></a>主题的选择</h2><p>hexo还是比较完善成熟的，有很多繁琐的细节，对应的插件主题有很多，这就让有选择困难症的我伤透了脑筋。其实开始是以第一次被吸引的那个typecho博客用的handsome主题为选择标准的，但后来发现handsome作为付费主题，在hexo中少有相对应的主题可与之媲美，且其平台也是限制了主题功能。但我实在是不想用默认的或者“经典皮肤”next了，最后还是求助偶尔万能的知乎，找到了一款满意的主题——butterfly。这款主题也是比较美观，功能完善，文档也还行的（这个我就要吐槽了，它原来的文档网站挂掉了，应该是被恶意劫持了，反正就找不到文档了，但最后还是直接用搜索引擎找到了文档）。</p><h2 id="配置过程中遇到的问题"><a href="#配置过程中遇到的问题" class="headerlink" title="配置过程中遇到的问题"></a>配置过程中遇到的问题</h2><p>哇，最开始时对这些_config.yml、markdown什么的真一窍不通啊啊。什么都看不懂，找半天找不到地方，好在连续两天折腾大概对各个配置熟悉起来，插件的应用也得心应手，也慢慢能用markdown写博客了。</p><h3 id="在此过程中大大小小的问题有："><a href="#在此过程中大大小小的问题有：" class="headerlink" title="在此过程中大大小小的问题有："></a>在此过程中大大小小的问题有：</h3><h4 id="aplayer"><a href="#aplayer" class="headerlink" title="aplayer"></a>aplayer</h4><p>播放音乐在导航栏的音乐界面中一开始失灵无法使用，后来发现是带着以前的网页格式粘贴导致。</p><h4 id="豆瓣插件"><a href="#豆瓣插件" class="headerlink" title="豆瓣插件"></a>豆瓣插件</h4><p>使用豆瓣插件获取豆瓣账号书籍、电影等信息，由于在测试过程中，获取次数太多，被豆瓣屏蔽😓无法获取，过了一天又可以。</p><h4 id="markdown中图片插入问题。"><a href="#markdown中图片插入问题。" class="headerlink" title="markdown中图片插入问题。"></a>markdown中图片插入问题。</h4><p>路径的选择总是有问题，绝对不能天绝对路径(lll￢ω￢)这是铁律……换个环境路径立马失效。然后直接用相对路径在hexo post中大部分情况会失灵，这需要再下载<a href="https://www.jianshu.com/p/3db6a61d3782" target="_blank" rel="noopener">hexo-asset-image</a>，它会新建一个与md同名文件夹，里面存图片可访问。</p><h4 id="文件的存储"><a href="#文件的存储" class="headerlink" title="文件的存储"></a>文件的存储</h4><p>这个问题我可能将持续面对。目前用的是<a href="https://leancloud.cn" target="_blank" rel="noopener">leancloud</a>新建应用上传文件，获取链接，在在博文中插入。但这个服务看到不能长期免费提供，还得有备案域名绑定，这就很头疼。可能的时候得再找一个类似云存储替代。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>目前，博客的大部分功能都已完成，剩下的就是看自己能用多少热情坚持写下去了……</p></body></html>]]></content>
      
      
      <categories>
          
          <category> summary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 问题总结 </tag>
            
            <tag> hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于typecho</title>
      <link href="/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/"/>
      <url>/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="关于typecho的尝试"><a href="#关于typecho的尝试" class="headerlink" title="关于typecho的尝试"></a>关于typecho的尝试</h1><h2 id="走了很多弯路"><a href="#走了很多弯路" class="headerlink" title="走了很多弯路"></a>走了很多弯路</h2><p>​    有一说一，typecho是真的好用，这得吹一波。它有自己的后台，功能完善，对主题、插件的管理直接且方便，真的是很良心。而就是这些，让我以为一定只能需要服务器才能运行，当然这也确实是需要服务器来进行复杂的操作，静态网页肯定做不到这些。但我错得离谱的是以为本地不能搭建typecho环境，必须得Linux服务器，搞得我有去下了个CentOS虚拟机捣鼓半天。我现在的话只是想现在本地看一下typecho的具体情况，服务器什么的以后再说，但是弄半天本地就是不行。</p><p>   后来我越想越不对劲，不对啊，这东西按道理有个php全家桶像xampp什么的应该都能运行啊，不管是Windows还是Linux。后来在phpstudy里面安装，发现的确是能进入安装页面中的😓，属实自己捞了，学了这么计网实验都是干啥吃的……话说到这里，我突然想起来微机实验的成绩应该出来了！</p><p>   我去看一下先，。。。完了，B+。。最差的一个实验成绩。不过也确实，这里面没有一个是我自己好好做的，怪不了谁，当初要态度端正点，好好学一下就好。咳、话扯远了。</p><p><a href="/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/pz1.png" data-fancybox="group" data-caption="phpstudy" class="fancybox"><img alt="phpstudy" title="phpstudy" data-src="/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/pz1.png" class="lazyload"></a></p><h2 id="使用phpStudy在Windows本地搭建"><a href="#使用phpStudy在Windows本地搭建" class="headerlink" title="使用phpStudy在Windows本地搭建"></a>使用phpStudy在Windows本地搭建</h2><p>   最后phpstudy里安装时，发现总连不上数据库。我寻思端口什么的各项配置应该都没问题啊，说到mysql，我现在系统同时有三个MySQL运行，5.1、5.7、8.0都可以正常运行，这也是在端口、服务、注册表各种配置间来回改才能行的。最后一查原因是得先在MySQL里建typecho表(lll￢ω￢)，又愚蠢了，好多低级错误让自己忙活半天，我以为它会自动帮着建来着。。接下来就完全跟着界面提示走进行了。</p><p><a href="/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/pz2.png" data-fancybox="group" data-caption="typecho1" class="fancybox"><img alt="typecho1" title="typecho1" data-src="/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/pz2.png" class="lazyload"></a></p><p><a href="/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/pz3.png" data-fancybox="group" data-caption="typecho2" class="fancybox"><img alt="typecho2" title="typecho2" data-src="/2020/01/23/%E5%85%B3%E4%BA%8Etypecho/pz3.png" class="lazyload"></a></p><p>   反正，不管怎么说，还是能在Windows系统中成功搭建本地typecho，在网上找一个合适的主题试用一下，越用越觉得这东西真棒，比hexo肯定是功能强大多了，当然我也是很喜欢hexo，毕竟作为入门级博客，还可以搭配GitHub、新手域名让人白嫖已经很不错了。</p></body></html>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> typecho </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密测试</title>
      <link href="/2020/01/19/%E5%8A%A0%E5%AF%86%E6%B5%8B%E8%AF%95/"/>
      <url>/2020/01/19/%E5%8A%A0%E5%AF%86%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Hey, password is required here.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="f8e4cb59f532e86f0b568021aa40742c7ba93550301bbd3099dd6d8c19d6ae53">1361495f87fcfdf0bb0aaa8d1c0d999a36e2ab59107d2c8a76548b8a3f8c177c18d64acc9a2122adfc6b367ce65581587755d52f2749cadf3a8388e2b8a557c1f034f6ab4f17ddfd6ccf68a61edff2deaf756998aabd5e0dfa0bf39af646b32b5261ccf1f1d2a61165b0ac41b62c903a21075529cc7b8cc9fc82a46cb178589bf2abf18bd90e7cde6dfb4ddb07710b7f734e0b5cb6f520366a564e8946503da4ae3f4283373032204bafb65e6e6e5abe7ce7888c1e073ff2d957d07fb627e096ad8cc1fcd976bd0b1776d57d500a9d1d82760097b049a400bd90bd865af51552d65af6290d4d1ff8968865e9b150cdc84c64ea5141740d3522884aa3cda9a40c34d4e5430c6e1b9e22ee072c42fd5b31c7879947e66df7c27f3c1e61583a29edd965f183f9482d24b8944f19c1030c90565497f3c4c130689a1e0451ceff4c75bccf8f7890d1b0689189ec9e1b2d80a928647ffef03eaa0aeff0b0d5b3eda07a0d6e17324cc1d8a8e284daea893e78c64e9cd3307fb72f25f487d2a2b636e0ddf3f50d8d06ff0119987c8db250afce68a6d22b229f6a5cf192a3b0f7b6e278246cdfd55bd4dace35a6cee3cf604a40a88f56caaea82d9fb555fc16ebef56eb16385f99cb40fa96cc74dc810e0c3aa133613b7f784ede3c84d1ea6f120a323876068a9fca2d4c523d52c7fc11a8a4763c140224f326624b58a230d7a03cdce535</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>只出现一次的数字</title>
      <link href="/2020/01/18/%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/"/>
      <url>/2020/01/18/%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p>给定一个<strong>非空</strong>整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。</p><h2 id="说明："><a href="#说明：" class="headerlink" title="说明："></a><strong>说明：</strong></h2><p>你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？</p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1:"></a><strong>示例 1:</strong></h4><p><code>输入: [2,2,1]</code> </p><p><code>输出: 1</code></p><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2:"></a><strong>示例 2:</strong></h4><p><code>输入: [4,1,2,1,2]</code> </p><p><code>输出: 4</code></p><h2 id="解题："><a href="#解题：" class="headerlink" title="解题："></a>解题：</h2><p>这道题真的妙，我越发觉得自己不适合算法什么的了😑</p><p>最精彩的解法是用异或运算</p><p>先设一个变量、初始值为0，将其与数组中的每个数异或，每次赋值为得到的新值。由于第一个数与0异或，还是其自己，在与后面的异或相同则是0，不同则还是自己，所以最后得到的数只有出现过一次的数。</p><p><code>class Solution {</code></p><p>​    <code>public int singleNumber(int[] nums) {</code></p><p>​        <code>int once = 0;</code></p><p>​        <code>for(int i = 0; i < nums.length; i++){</code></p><p>​            <code>once = once ^ nums[i];</code></p><p>​        <code>}</code></p><p>​        <code>return once ;</code></p><p>​        <code>}</code></p><p>​    <code>}</code></p></body></html>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 巧妙的算法 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++ vector容器</title>
      <link href="/2020/01/17/C++%20vector%20%E5%AE%B9%E5%99%A8/"/>
      <url>/2020/01/17/C++%20vector%20%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><h1 id="C-vector-容器"><a href="#C-vector-容器" class="headerlink" title="C++ vector 容器"></a><strong>C++ vector 容器</strong></h1><p>向量（Vector）是一个封装了动态大小数组的顺序容器（Sequence Container）。跟任意其它类型容器一样，它能够存放各种类型的对象。可以简单的认为，向量是一个能够存放任意类型的动态数组。</p><h3 id="特性："><a href="#特性：" class="headerlink" title="特性："></a><strong>特性：</strong></h3><p><strong>1.顺序序列</strong></p><p>顺序容器中的元素按照严格的线性顺序排序。可以通过元素在序列中的位置访问对应的元素。</p><p><strong>2.动态数组</strong></p><p>支持对序列中的任意元素进行快速直接访问，甚至可以通过指针算述进行该操作。操供了在序列末尾相对快速地添加/删除元素的操作。</p><p><strong>3.能够感知内存分配器的（Allocator-aware）</strong></p><p>容器使用一个内存分配器对象来动态地处理它的存储需求。</p><h3 id="基本函数实现："><a href="#基本函数实现：" class="headerlink" title="基本函数实现："></a><strong>基本函数实现：</strong></h3><p><code>1.push_back 在数组的最后添加一个数据</code></p><p><code>2.pop_back 去掉数组的最后一个数据</code></p><p><code>3.at 得到编号位置的数据</code></p><p><code>4.begin 得到数组头的指针</code></p><p><code>5.end 得到数组的最后一个单元+1的指针</code></p><p><code>6．front 得到数组头的引用</code></p><p><code>7.back 得到数组的最后一个单元的引用</code></p><p><code>8.max_size 得到vector最大可以是多大</code></p><p><code>9.capacity 当前vector分配的大小</code></p><p><code>10.size 当前使用数据的大小</code></p><p><code>11.resize 改变当前使用数据的大小，如果它比当前使用的大，者填充默认值</code></p><p><code>12.reserve 改变当前vecotr所分配空间的大小</code></p><p><code>13.erase 删除指针指向的数据项</code></p><p><code>14.clear 清空当前的vector</code></p><p><code>15.rbegin 将vector反转后的开始指针返回(其实就是原来的end-1)</code></p><p><code>16.rend 将vector反转构的结束指针返回(其实就是原来的begin-1)</code></p><p><code>17.empty 判断vector是否为空</code></p><p><code>18.swap 与另一个vector交换数据</code></p><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a><strong>总结：</strong></h3><p>vector容器是一个模板类，可以存放任何类型的对象（但必须是同一类对象）。vector对象可以在运行时高效地添加元素，并且vector中元素是连续存储的。#include <vector>头文件。</vector></p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a><strong>注意：</strong></h3><p>Ø vector和string一样，长度、下标等类型是size_type，但是vector获取size_type时，需要指定类型，如vector<int>::size_type这样的方式</int></p><p>Ø vector的下标操作，例如v[i]，只能用于操作已经存在的元素，可以进行覆盖、获取等，但是不能通过v[i++]这种方式来给一个vector容器添加元素，该功能需要用push_back操作完成，下标不具备该功能</p><p>Ø C++程序员习惯优先使用！=而不是<来编写循环判断条件</p></body></html>]]></content>
      
      
      <categories>
          
          <category> C++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> vecot&lt;&gt; </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2020/01/16/test/"/>
      <url>/2020/01/16/test/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p>这是一个测试文章</p><p>test</p>        <div id="aplayer-pNIAfLOq" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-pNIAfLOq"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "rainbow",              author: "GFRIEND",              url: "http://lc-UQ294L34.cn-n1.lcfile.com/308b986e7a1533e7329a/rainbow.mp3",              pic: "http://lc-UQ294L34.cn-n1.lcfile.com/c864c24ec3570caff28f/GFRIEND.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script></body></html>]]></content>
      
      
      <categories>
          
          <category> test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/01/15/hello-world/"/>
      <url>/2020/01/15/hello-world/</url>
      
        <content type="html"><![CDATA[<html><head><link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script></head><body><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new "My New Post"</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p></body></html>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
